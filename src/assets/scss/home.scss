$accentColor: #6eeb83; // Using a SCSS variable for easy access of the color.
$boxShadowValue: 0 5px 10px 1px rgba(0,0,0,.1), 0 0px 10px 1px rgba(0,0,0,.02); // A variable for a widely used box-shadow
$hoverBoxShadowValue: 0 5px 10px 1px rgba(0,0,0,.2), 0 0px 10px 1px rgba(0,0,0,.04); // Alternate form of the box-shadow


#home {

    /*
        Using 'display: grid' with 'place-items: center' to vertically and
        horizontally center all child elements. Using grid may slightly impact
        load times but for this little app it will not matter.
    */

    display: grid;
    place-items: center;
    height: 100vh;
    #todo-header {
        text-align: center; // Keep most* child elements in the center of the this element.
        #todo-title {
            color: $accentColor;
            font-size: 60px;
        }
        #todo-new {
            position: relative;
            width: 600px; // Restrict the width of the child elements when using display-based units (vw, vh etc.)
            & > * { // Giving each of the child elements a specific style - In this case setting a border-radius
                border-radius: 5px; 
            }
            #todo-input {
                border: none; // Hide default border-styling
                width: 70%; 
                min-height: 50px; max-height: 50px; // Minimum and maximum set to the same value so that the height does not change.
                margin-right: 20px; // Give some spacing between the input field and the button on the right
                padding: 0 20px; // Added only horizontal padding so that text is not touching the edge of the input field
                display: inline-block;  // Make the input element inline (Already a block element)
                vertical-align: middle; // so that they can show inline with each other
                box-shadow: $boxShadowValue;
                font: {
                    family: 'Inter', sans-serif;
                    size: 15px;
                }
            }
            #todo-add {
                padding: 15px 20px; // Ensure that the height is the same as the input by using padding
                color: #ffffff; // I prefer to stick with HEX codes when doing non-transparent colors
                background: $accentColor;
                display: inline-block;  
                vertical-align: middle;
                box-shadow: $boxShadowValue;
                cursor: pointer; // Make the element have a pointer - Acting like a button element.
                transition: box-shadow ease-in-out .2s; // Add a smooth animation when the hover effect happens.
                font: {
                    family: 'Metropolis', sans-serif;
                }
                &:hover {
                    box-shadow: $hoverBoxShadowValue;
                }
            }
        }
    }
}